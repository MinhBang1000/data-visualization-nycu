/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatecode"]("main",{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ (() => {

eval("const {\r\n  select,\r\n  csv,\r\n  scaleLinear,\r\n  extent,\r\n  axisLeft,\r\n  axisBottom,\r\n  format,\r\n} = d3\r\n\r\nconst svg = select('svg');\r\n\r\nconst width = +svg.attr('width');\r\nconst height = +svg.attr('height');\r\n\r\nconst render = (data, xAttr, yAttr) => {\r\n  const colors = {\r\n    'Iris-setosa': '#3CB371',\r\n    'Iris-versicolor': '#FF6347',\r\n    'Iris-virginica': '#4B0082',\r\n  };\r\n  const title = `Visualizing Sepal and Petal Dimensions Across Iris Species`;\r\n\r\n  const cValue = (d) => d['class'];\r\n\r\n  const xValue = (d) => d[xAttr];\r\n  const xAxisLabel = xAttr;\r\n\r\n  const yValue = (d) => d[yAttr];\r\n  const circleRadius = 8;\r\n  const yAxisLabel = yAttr;\r\n\r\n  const margin = {\r\n    top: 100,\r\n    right: 80,\r\n    bottom: 100,\r\n    left: 100,\r\n  };\r\n  const innerWidth = width - margin.left - margin.right;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n\r\n  const xScale = scaleLinear()\r\n    .domain(extent(data, xValue))\r\n    .range([0, innerWidth])\r\n    .nice();\r\n\r\n  const yScale = scaleLinear()\r\n    .domain(extent(data, yValue))\r\n    .range([innerHeight, 0])\r\n    .nice();\r\n\r\n  const g = svg\r\n    .append('g')\r\n    .attr(\r\n      'transform',\r\n      `translate(${margin.left},${margin.top})`,\r\n    );\r\n\r\n  const xAxis = axisBottom(xScale)\r\n    .tickSize(-innerHeight)\r\n    .tickPadding(15);\r\n\r\n  const yAxis = axisLeft(yScale)\r\n    .tickSize(-innerWidth)\r\n    .tickPadding(10);\r\n\r\n  const yAxisG = g.append('g').call(yAxis);\r\n  yAxisG.selectAll('.domain').remove();\r\n\r\n  yAxisG\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .attr('y', -60)\r\n    .attr('x', -innerHeight / 2)\r\n    .attr('transform', `rotate(-90)`)\r\n    .attr('text-anchor', 'middle')\r\n    .text(yAxisLabel);\r\n\r\n  const xAxisG = g\r\n    .append('g')\r\n    .call(xAxis)\r\n    .attr('transform', `translate(0,${innerHeight})`);\r\n\r\n  xAxisG.select('.domain').remove();\r\n\r\n  xAxisG\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .attr('y', 70)\r\n    .attr('x', innerWidth / 2)\r\n    .text(xAxisLabel);\r\n\r\n  g.selectAll('circle')\r\n    .data(data)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('cy', (d) => yScale(yValue(d)))\r\n    .attr('cx', (d) => xScale(xValue(d)))\r\n    .attr('fill', (d) => colors[cValue(d)])\r\n    .attr('class', (d) => cValue(d))\r\n    .attr('r', circleRadius)\r\n    .style('opacity', 0)\r\n    .transition()\r\n    .duration(1000)\r\n    .style('opacity', 0.5);\r\n\r\n  g.append('text')\r\n    .attr('class', 'title')\r\n    .attr('y', -25)\r\n    .text(title);\r\n};\r\n\r\nconst updateFields = (data) => {\r\n  svg.selectAll('g').remove();\r\n  const xAttr = document.getElementById('x-select').value;\r\n  const yAttr = document.getElementById('y-select').value;\r\n  render(data, xAttr, yAttr);\r\n};\r\n\r\nconst hoverToMoreClarify = (className) => {\r\n  svg\r\n    .selectAll(`.${className}`)\r\n    .transition()\r\n    .duration(500)\r\n    .style('opacity', 1);\r\n};\r\n\r\nconst unhoverToLessClarify = (className) => {\r\n  svg\r\n    .selectAll(`.${className}`)\r\n    .transition()\r\n    .duration(500)\r\n    .style('opacity', 0.5);\r\n};\r\n\r\ncsv('http://vis.lab.djosix.com:2024/data/iris.csv').then((data) => {\r\n  data.forEach((d) => {\r\n    d['sepal length'] = +d['sepal length'];\r\n    d['sepal width'] = +d['sepal width'];\r\n    d['petal length'] = +d['petal length'];\r\n    d['petal width'] = +d['petal width'];\r\n  });\r\n  const validData = data.filter(\r\n    (d) =>\r\n      !isNaN(d['sepal length']) &&\r\n      !isNaN(d['sepal width']) &&\r\n      !isNaN(d['petal length']) &&\r\n      !isNaN(d['sepal width']),\r\n  );\r\n  updateFields(validData);\r\n  document\r\n    .getElementById('x-select')\r\n    .addEventListener('change', () =>\r\n      updateFields(validData),\r\n    );\r\n  document\r\n    .getElementById('y-select')\r\n    .addEventListener('change', () =>\r\n      updateFields(validData),\r\n    );\r\n  // Hover to clarify circles\r\n  document\r\n    .getElementById('setosa')\r\n    .addEventListener('mouseenter', () =>\r\n      hoverToMoreClarify('Iris-setosa'),\r\n    );\r\n  document\r\n    .getElementById('versicolor')\r\n    .addEventListener('mouseenter', () =>\r\n      hoverToMoreClarify('Iris-versicolor'),\r\n    );\r\n  document\r\n    .getElementById('virginica')\r\n    .addEventListener('mouseenter', () =>\r\n      hoverToMoreClarify('Iris-virginica'),\r\n    );\r\n  // Un-Hover to less clarify circles\r\n  document\r\n    .getElementById('setosa')\r\n    .addEventListener('mouseleave', () =>\r\n      unhoverToLessClarify('Iris-setosa'),\r\n    );\r\n  document\r\n    .getElementById('versicolor')\r\n    .addEventListener('mouseleave', () =>\r\n      unhoverToLessClarify('Iris-versicolor'),\r\n    );\r\n  document\r\n    .getElementById('virginica')\r\n    .addEventListener('mouseleave', () =>\r\n      unhoverToLessClarify('Iris-virginica'),\r\n    );\r\n});\r\n\n\n//# sourceURL=webpack://code/./index.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2e80a7602fd0ec0249d0")
/******/ })();
/******/ 
/******/ }
);